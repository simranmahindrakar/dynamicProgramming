#include<iostream>
#include<bits/stdc++.h>
using namespace std;
int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		int n;
		cin>>n;
		int input1 = n;

		pair<long long, long long> dp[n+10];        //an array of pairs. It will store left longest and right longest
		//vector<int> vec[];	        //an array of vectors. This is a 2D grid.
		vector<pair<long long,long long> > v;     //stores input pairs p,h
		while(input1--)
		{
			long long x,y;
			cin>>x>>y;
			v.push_back(make_pair(x,y));      //saving the inputs as pairs
		}
		sort(v.begin(),v.end());
		for(int i=0; i<n; i++)
		{
			dp[i].first = v[i].second;      //itna toh hoga hi hoga 
			dp[i].second = v[i].second;
		}
		
		for(int i=1; i<n; i++)
		{
		    for(int j=0; j<=i-1; j++)
		    {
		        
			if(v[i].second == abs(v[j].first - v[i].first)) 
			{
		     	dp[i].first = max(dp[i].first,v[i].second + dp[j].first ) ;                //considering left cuts only
		     	
		    }
		    if(v[j].second == abs(v[j].first - v[i].first)) 
		    {
		    	dp[i].second = max(dp[i].second, dp[j].second + v[i].second);              //considering right cuts only 
			}
		  
		   if((v[j].second + v[i].second) == abs(v[i].first - v[j].first))
			{
			   dp[i].first = max(dp[i].first, dp[j].second + v[i].second);  //khud ki ht bhi toh add hogi SIMRAN!!! 
			}
		}
		}
		
	long long rightlongest = 0, leftlongest =0;
	for(int i=0; i<n; i++)
	{
		if(dp[i].first > leftlongest) {
			leftlongest = dp[i].first;
		}
		
		rightlongest = max(dp[i].second, rightlongest);
	}
	//cout<<rightlongest<<" "<<leftlongest<<"\n";
	cout<<max(rightlongest,leftlongest)<<"\n";
}

}











