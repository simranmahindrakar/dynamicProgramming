class Solution {
public:
    int uniquePaths(int m, int n) {
        int dp[m][n];
        //only 1 way to access row 0
        for (int i=0; i<m; i++) {
            dp[i][0] = 1;
        }
        //only 1 way to access column 0
        for (int j=0; j<n; j++) {
            dp[0][j] = 1;
        }
        //populate the remaining cells
        for(int i=1; i<m; i++) {
            for(int j=1; j<n; j++)
            {
                //Number of ways to reach dp[i][j] = number of ways to reach cell above it and cell below it
                dp[i][j] = dp[i-1][j] + dp[i][j-1];
            }
        }
        return dp[m-1][n-1];
    }
};
